Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> composition
Rule 1     composition -> LETTER NUMBER POST NUMBER LPARAN NUMBER RPARAN bar
Rule 2     composition -> LETTER NUMBER POST NUMBER bar
Rule 3     composition -> bar
Rule 4     bar -> LBRACKET notes RBRACKET
Rule 5     notes -> pitch DASH duration notes
Rule 6     notes -> pitch DASH duration
Rule 7     pitch -> LETTER DASH NUMBER
Rule 8     duration -> NUMBER

Terminals, with rules where they appear

DASH                 : 5 6 7
LBRACKET             : 4
LETTER               : 1 2 7
LPARAN               : 1
NUMBER               : 1 1 1 2 2 7 8
POST                 : 1 2
RBRACKET             : 4
RPARAN               : 1
error                : 

Nonterminals, with rules where they appear

bar                  : 1 2 3
composition          : 0
duration             : 5 6
notes                : 4 5
pitch                : 5 6

Parsing method: LALR

state 0

    (0) S' -> . composition
    (1) composition -> . LETTER NUMBER POST NUMBER LPARAN NUMBER RPARAN bar
    (2) composition -> . LETTER NUMBER POST NUMBER bar
    (3) composition -> . bar
    (4) bar -> . LBRACKET notes RBRACKET

    LETTER          shift and go to state 3
    LBRACKET        shift and go to state 2

    bar                            shift and go to state 1
    composition                    shift and go to state 4

state 1

    (3) composition -> bar .

    $end            reduce using rule 3 (composition -> bar .)


state 2

    (4) bar -> LBRACKET . notes RBRACKET
    (5) notes -> . pitch DASH duration notes
    (6) notes -> . pitch DASH duration
    (7) pitch -> . LETTER DASH NUMBER

    LETTER          shift and go to state 6

    notes                          shift and go to state 5
    pitch                          shift and go to state 7

state 3

    (1) composition -> LETTER . NUMBER POST NUMBER LPARAN NUMBER RPARAN bar
    (2) composition -> LETTER . NUMBER POST NUMBER bar

    NUMBER          shift and go to state 8


state 4

    (0) S' -> composition .



state 5

    (4) bar -> LBRACKET notes . RBRACKET

    RBRACKET        shift and go to state 9


state 6

    (7) pitch -> LETTER . DASH NUMBER

    DASH            shift and go to state 10


state 7

    (5) notes -> pitch . DASH duration notes
    (6) notes -> pitch . DASH duration

    DASH            shift and go to state 11


state 8

    (1) composition -> LETTER NUMBER . POST NUMBER LPARAN NUMBER RPARAN bar
    (2) composition -> LETTER NUMBER . POST NUMBER bar

    POST            shift and go to state 12


state 9

    (4) bar -> LBRACKET notes RBRACKET .

    $end            reduce using rule 4 (bar -> LBRACKET notes RBRACKET .)


state 10

    (7) pitch -> LETTER DASH . NUMBER

    NUMBER          shift and go to state 13


state 11

    (5) notes -> pitch DASH . duration notes
    (6) notes -> pitch DASH . duration
    (8) duration -> . NUMBER

    NUMBER          shift and go to state 15

    duration                       shift and go to state 14

state 12

    (1) composition -> LETTER NUMBER POST . NUMBER LPARAN NUMBER RPARAN bar
    (2) composition -> LETTER NUMBER POST . NUMBER bar

    NUMBER          shift and go to state 16


state 13

    (7) pitch -> LETTER DASH NUMBER .

    DASH            reduce using rule 7 (pitch -> LETTER DASH NUMBER .)


state 14

    (5) notes -> pitch DASH duration . notes
    (6) notes -> pitch DASH duration .
    (5) notes -> . pitch DASH duration notes
    (6) notes -> . pitch DASH duration
    (7) pitch -> . LETTER DASH NUMBER

    RBRACKET        reduce using rule 6 (notes -> pitch DASH duration .)
    LETTER          shift and go to state 6

    notes                          shift and go to state 17
    pitch                          shift and go to state 7

state 15

    (8) duration -> NUMBER .

    LETTER          reduce using rule 8 (duration -> NUMBER .)
    RBRACKET        reduce using rule 8 (duration -> NUMBER .)


state 16

    (1) composition -> LETTER NUMBER POST NUMBER . LPARAN NUMBER RPARAN bar
    (2) composition -> LETTER NUMBER POST NUMBER . bar
    (4) bar -> . LBRACKET notes RBRACKET

    LPARAN          shift and go to state 18
    LBRACKET        shift and go to state 2

    bar                            shift and go to state 19

state 17

    (5) notes -> pitch DASH duration notes .

    RBRACKET        reduce using rule 5 (notes -> pitch DASH duration notes .)


state 18

    (1) composition -> LETTER NUMBER POST NUMBER LPARAN . NUMBER RPARAN bar

    NUMBER          shift and go to state 20


state 19

    (2) composition -> LETTER NUMBER POST NUMBER bar .

    $end            reduce using rule 2 (composition -> LETTER NUMBER POST NUMBER bar .)


state 20

    (1) composition -> LETTER NUMBER POST NUMBER LPARAN NUMBER . RPARAN bar

    RPARAN          shift and go to state 21


state 21

    (1) composition -> LETTER NUMBER POST NUMBER LPARAN NUMBER RPARAN . bar
    (4) bar -> . LBRACKET notes RBRACKET

    LBRACKET        shift and go to state 2

    bar                            shift and go to state 22

state 22

    (1) composition -> LETTER NUMBER POST NUMBER LPARAN NUMBER RPARAN bar .

    $end            reduce using rule 1 (composition -> LETTER NUMBER POST NUMBER LPARAN NUMBER RPARAN bar .)

