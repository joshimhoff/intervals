Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> compostion
Rule 1     compostion -> prelude bars
Rule 2     compostion -> bars
Rule 3     prelude -> LETTER NUMBER POST NUMBER NUMBER
Rule 4     prelude -> LETTER NUMBER POST NUMBER
Rule 5     bars -> LBRACKET units RBRACKET bars
Rule 6     bars -> LBRACKET units RBRACKET
Rule 7     units -> note units
Rule 8     units -> note
Rule 9     units -> chord units
Rule 10    units -> chord
Rule 11    chord -> LPARAN notes RPARAN
Rule 12    notes -> note notes
Rule 13    notes -> note
Rule 14    note -> pitch DASH duration
Rule 15    pitch -> LETTER DASH NUMBER
Rule 16    duration -> NUMBER

Terminals, with rules where they appear

DASH                 : 14 15
LBRACKET             : 5 6
LETTER               : 3 4 15
LPARAN               : 11
NUMBER               : 3 3 3 4 4 15 16
POST                 : 3 4
RBRACKET             : 5 6
RPARAN               : 11
error                : 

Nonterminals, with rules where they appear

bars                 : 1 2 5
chord                : 9 10
compostion           : 0
duration             : 14
note                 : 7 8 12 13
notes                : 11 12
pitch                : 14
prelude              : 1
units                : 5 6 7 9

Parsing method: LALR

state 0

    (0) S' -> . compostion
    (1) compostion -> . prelude bars
    (2) compostion -> . bars
    (3) prelude -> . LETTER NUMBER POST NUMBER NUMBER
    (4) prelude -> . LETTER NUMBER POST NUMBER
    (5) bars -> . LBRACKET units RBRACKET bars
    (6) bars -> . LBRACKET units RBRACKET

    LETTER          shift and go to state 4
    LBRACKET        shift and go to state 3

    bars                           shift and go to state 1
    compostion                     shift and go to state 2
    prelude                        shift and go to state 5

state 1

    (2) compostion -> bars .

    $end            reduce using rule 2 (compostion -> bars .)


state 2

    (0) S' -> compostion .



state 3

    (5) bars -> LBRACKET . units RBRACKET bars
    (6) bars -> LBRACKET . units RBRACKET
    (7) units -> . note units
    (8) units -> . note
    (9) units -> . chord units
    (10) units -> . chord
    (14) note -> . pitch DASH duration
    (11) chord -> . LPARAN notes RPARAN
    (15) pitch -> . LETTER DASH NUMBER

    LPARAN          shift and go to state 8
    LETTER          shift and go to state 9

    chord                          shift and go to state 7
    note                           shift and go to state 6
    pitch                          shift and go to state 10
    units                          shift and go to state 11

state 4

    (3) prelude -> LETTER . NUMBER POST NUMBER NUMBER
    (4) prelude -> LETTER . NUMBER POST NUMBER

    NUMBER          shift and go to state 12


state 5

    (1) compostion -> prelude . bars
    (5) bars -> . LBRACKET units RBRACKET bars
    (6) bars -> . LBRACKET units RBRACKET

    LBRACKET        shift and go to state 3

    bars                           shift and go to state 13

state 6

    (7) units -> note . units
    (8) units -> note .
    (7) units -> . note units
    (8) units -> . note
    (9) units -> . chord units
    (10) units -> . chord
    (14) note -> . pitch DASH duration
    (11) chord -> . LPARAN notes RPARAN
    (15) pitch -> . LETTER DASH NUMBER

    RBRACKET        reduce using rule 8 (units -> note .)
    LPARAN          shift and go to state 8
    LETTER          shift and go to state 9

    chord                          shift and go to state 7
    note                           shift and go to state 6
    pitch                          shift and go to state 10
    units                          shift and go to state 14

state 7

    (9) units -> chord . units
    (10) units -> chord .
    (7) units -> . note units
    (8) units -> . note
    (9) units -> . chord units
    (10) units -> . chord
    (14) note -> . pitch DASH duration
    (11) chord -> . LPARAN notes RPARAN
    (15) pitch -> . LETTER DASH NUMBER

    RBRACKET        reduce using rule 10 (units -> chord .)
    LPARAN          shift and go to state 8
    LETTER          shift and go to state 9

    chord                          shift and go to state 7
    note                           shift and go to state 6
    pitch                          shift and go to state 10
    units                          shift and go to state 15

state 8

    (11) chord -> LPARAN . notes RPARAN
    (12) notes -> . note notes
    (13) notes -> . note
    (14) note -> . pitch DASH duration
    (15) pitch -> . LETTER DASH NUMBER

    LETTER          shift and go to state 9

    note                           shift and go to state 17
    notes                          shift and go to state 16
    pitch                          shift and go to state 10

state 9

    (15) pitch -> LETTER . DASH NUMBER

    DASH            shift and go to state 18


state 10

    (14) note -> pitch . DASH duration

    DASH            shift and go to state 19


state 11

    (5) bars -> LBRACKET units . RBRACKET bars
    (6) bars -> LBRACKET units . RBRACKET

    RBRACKET        shift and go to state 20


state 12

    (3) prelude -> LETTER NUMBER . POST NUMBER NUMBER
    (4) prelude -> LETTER NUMBER . POST NUMBER

    POST            shift and go to state 21


state 13

    (1) compostion -> prelude bars .

    $end            reduce using rule 1 (compostion -> prelude bars .)


state 14

    (7) units -> note units .

    RBRACKET        reduce using rule 7 (units -> note units .)


state 15

    (9) units -> chord units .

    RBRACKET        reduce using rule 9 (units -> chord units .)


state 16

    (11) chord -> LPARAN notes . RPARAN

    RPARAN          shift and go to state 22


state 17

    (12) notes -> note . notes
    (13) notes -> note .
    (12) notes -> . note notes
    (13) notes -> . note
    (14) note -> . pitch DASH duration
    (15) pitch -> . LETTER DASH NUMBER

    RPARAN          reduce using rule 13 (notes -> note .)
    LETTER          shift and go to state 9

    note                           shift and go to state 17
    notes                          shift and go to state 23
    pitch                          shift and go to state 10

state 18

    (15) pitch -> LETTER DASH . NUMBER

    NUMBER          shift and go to state 24


state 19

    (14) note -> pitch DASH . duration
    (16) duration -> . NUMBER

    NUMBER          shift and go to state 26

    duration                       shift and go to state 25

state 20

    (5) bars -> LBRACKET units RBRACKET . bars
    (6) bars -> LBRACKET units RBRACKET .
    (5) bars -> . LBRACKET units RBRACKET bars
    (6) bars -> . LBRACKET units RBRACKET

    $end            reduce using rule 6 (bars -> LBRACKET units RBRACKET .)
    LBRACKET        shift and go to state 3

    bars                           shift and go to state 27

state 21

    (3) prelude -> LETTER NUMBER POST . NUMBER NUMBER
    (4) prelude -> LETTER NUMBER POST . NUMBER

    NUMBER          shift and go to state 28


state 22

    (11) chord -> LPARAN notes RPARAN .

    LPARAN          reduce using rule 11 (chord -> LPARAN notes RPARAN .)
    LETTER          reduce using rule 11 (chord -> LPARAN notes RPARAN .)
    RBRACKET        reduce using rule 11 (chord -> LPARAN notes RPARAN .)


state 23

    (12) notes -> note notes .

    RPARAN          reduce using rule 12 (notes -> note notes .)


state 24

    (15) pitch -> LETTER DASH NUMBER .

    DASH            reduce using rule 15 (pitch -> LETTER DASH NUMBER .)


state 25

    (14) note -> pitch DASH duration .

    LPARAN          reduce using rule 14 (note -> pitch DASH duration .)
    LETTER          reduce using rule 14 (note -> pitch DASH duration .)
    RBRACKET        reduce using rule 14 (note -> pitch DASH duration .)
    RPARAN          reduce using rule 14 (note -> pitch DASH duration .)


state 26

    (16) duration -> NUMBER .

    LPARAN          reduce using rule 16 (duration -> NUMBER .)
    LETTER          reduce using rule 16 (duration -> NUMBER .)
    RBRACKET        reduce using rule 16 (duration -> NUMBER .)
    RPARAN          reduce using rule 16 (duration -> NUMBER .)


state 27

    (5) bars -> LBRACKET units RBRACKET bars .

    $end            reduce using rule 5 (bars -> LBRACKET units RBRACKET bars .)


state 28

    (3) prelude -> LETTER NUMBER POST NUMBER . NUMBER
    (4) prelude -> LETTER NUMBER POST NUMBER .

    NUMBER          shift and go to state 29
    LBRACKET        reduce using rule 4 (prelude -> LETTER NUMBER POST NUMBER .)


state 29

    (3) prelude -> LETTER NUMBER POST NUMBER NUMBER .

    LBRACKET        reduce using rule 3 (prelude -> LETTER NUMBER POST NUMBER NUMBER .)

